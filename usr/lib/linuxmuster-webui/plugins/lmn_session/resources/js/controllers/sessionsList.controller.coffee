angular.module('lmn.session').controller 'LMNSessionsListController', ($scope, $http, $location, $route, $uibModal, gettext, notify, messagebox, pageTitle, lmFileEditor, lmEncodingMap, filesystem, validation, $rootScope, wait, lmnSession) ->
    pageTitle.set(gettext('Sessions list'))

    $scope.generateSessionMouseover = gettext('Regenerate this session')
    $scope.startGeneratedSessionMouseover = gettext('Start this session unchanged (may not be up to date)')
    $scope.generateRoomsessionMouseover = gettext('Start session containing all users in this room')

    $scope.checkboxModel = {
       value1 : false,
       value2 : true
    }

    $scope.visible = {
       participanttable : 'none',
       sessiontable : 'none',
       sessionname : 'none',
       mainpage: 'show',
    }


    $scope.info = {
        message : ''
    }

    $scope._ = {
            addParticipant: null,
            addClass: null
    }

    $scope.resetClass = () ->
        result = document.getElementsByClassName("changed")
        while result.length
            result[0].className = result[0].className.replace( /(?:^|\s)changed(?!\S)/g , '' )
        return

    $scope.renameSession = (session) ->
        lmnSession.rename(session.ID, session.COMMENT).then (resp) ->
            session.COMMENT = resp

    $scope.killSession = (session) ->
        lmnSession.kill(session.ID, session.COMMENT).then () ->
            position = $scope.sessions.indexOf(session)
            $scope.sessions.splice(position, 1)

    $scope.newSession = () ->
        lmnSession.new().then () ->
            $scope.getSessions()

    $scope.getSessions = () ->
        lmnSession.load().then (resp) ->
            $scope.classes = resp[0]
            $scope.sessions = resp[1]

    $scope.showGroupDetails = (index, groupType, groupName) ->
       $uibModal.open(
          templateUrl: '/lmn_groupmembership:resources/partial/groupDetails.modal.html'
          controller:  'LMNGroupDetailsController'
          size: 'lg'
          resolve:
            groupType: () -> groupType
            groupName: () -> groupName
       )

    $scope.showRoomDetails = () ->
        $http.get('/api/lmn/session/userInRoom').then (resp) ->
            if resp.data == 0
                messagebox.show(title: gettext('Info'), text: gettext('Currenty its not possible to determine your room, try to login into your computer again.'), positive: 'OK')
            else
                usersInRoom=resp.data
                $uibModal.open(
                   templateUrl: '/lmn_session:resources/partial/roomDetails.modal.html'
                   controller:  'LMNRoomDetailsController'
                   size: 'lg'
                   resolve:
                     usersInRoom: () -> usersInRoom
                )

    $scope.getParticipants = (session) ->
        lmnSession.start(session)
#        $scope.visible.sessiontable = 'none'
#        $scope.resetClass()
#        # Reset select all checkboxes when loading participants
#        angular.forEach $scope.fields, (field) ->
#            field.checkboxStatus = false
#        $http.get("/api/lmn/session/sessions/#{session}").then (resp) ->
#            $scope.visible.sessionname = 'show'
#            $scope.filter = ''
#            $scope.visible.mainpage = 'none'
#            $scope.participants = resp.data
#            if $scope.participants == 'empty'
#               $scope.visible.participanttable = 'none'
#               $scope.info.message = gettext('This session appears to be empty. Start adding users by using the top search bar!')
#            else
#                $scope.info.message = ''
#                $scope.visible.participanttable = 'show'


    $scope.generateRoomSession = () ->
        $http.get('/api/lmn/session/userInRoom').then (resp) ->
            if resp.data == 0
                messagebox.show(title: gettext('Info'), text: gettext('Currenty its not possible to determine your room, try to login into your computer again.'), positive: 'OK')
            else
                usersInRoom=resp.data.usersList
                sessionComment = 'room-autoGenerated'
                sessionExist=false
                for session in $scope.sessions
                    if sessionComment == session['COMMENT']
                        sessionExist=true
                        sessionID= session['ID']
                        console.log ('sessionExist '+sessionExist )
                wait.modal(gettext('Generating session...'), 'spinner')
                $scope.generateSession(usersInRoom, sessionID, sessionComment, sessionExist)

    $scope.regenerateSession = (classname) ->
        console.warn("Regenerate called")
        sessionComment = classname+'-autoGenerated'
        sessionExist=false
        for session in $scope.sessions
            if sessionComment == session['COMMENT']
                sessionExist=true
                sessionID= session['ID']
                console.log ('sessionExist '+sessionExist )

        wait.modal(gettext('Generating session...'), 'spinner')
        $http.get('/api/lmn/groupmembership/groups/' + classname).then (resp) ->
            # get participants from specified class
            participants = resp.data['MEMBERS'][classname]
            participantsArray = []
            for participant,data of participants
                if participants[participant]['sophomorixRole'] != 'teacher'
                    participantsArray.push participant
            #$rootScope.$emit('updateWaiting', 'done')
            $scope.generateSession(participantsArray, sessionID, sessionComment, sessionExist)

    $scope.generateSession =  (participants,sessionID, sessionComment, sessionExist) ->
        #wait.modal(gettext('Generating session...'), 'spinner')
        # fix existing session
        console.warn("generate called")
        if sessionExist == true
            $http.post('/api/lmn/session/sessions', {action: 'update-session', username: $scope.identity.user, sessionID: sessionID, participants: participants}).then (resp) ->
                # emit wait process is done
                $rootScope.$emit('updateWaiting', 'done')
                # refresh Session table
                notify.success gettext('Session generated')
                # open new created session
                $scope.currentSession.name=sessionID
                $scope.currentSession.comment=sessionComment
                $scope.getParticipants(sessionID)

        # create new session
        if sessionExist == false
            # create new specified session
            $http.put("/api/lmn/session/sessions/#{sessionComment}", {participants: participants}).then (resp) ->
                # emit wait process is done
                $rootScope.$emit('updateWaiting', 'done')
                await $scope.getSessions()
                notify.success gettext('Session generated')
                # get new created sessionID
                for session in $scope.sessions
                    if sessionComment == session['COMMENT']
                        sessionID= session['ID']
                # open new created session
                $scope.currentSession.name=sessionID
                $scope.currentSession.comment=sessionComment
                $scope.getParticipants(sessionID)
                $scope.getWebConferenceEnabled()

    $scope.$watch 'identity.user', ->
        if $scope.identity.user is undefined
            return
        if $scope.identity.user is null
            return
        if $scope.identity.user is 'root'
            return
        $scope.getSessions()

angular.module('lmn.session').controller 'LMNRoomDetailsController', ($scope, $route, $uibModal, $uibModalInstance, $http, gettext, notify, messagebox, pageTitle, usersInRoom) ->
        $scope.usersInRoom = usersInRoom

        $scope.close = () ->
            $uibModalInstance.dismiss()